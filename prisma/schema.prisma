// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// table for User 

model User {
  id        String    @id @default(uuid())
  phone      String?   @unique
  email     String    @unique
  password  String
  fullName  String?
  status    String    @default("active")
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  sessions          Session[]
  otpVerifications OtpVerification[]
}

// table for user sessions

model Session {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  token        String   @unique
  refreshToken String?
  expiresAt    DateTime
  createdAt    DateTime @default(now())
}

// table for OtpVerification

model OtpVerification {
  id             String    @id @default(uuid())
  email          String    @unique
  otp            String
  type           String // 'email_verification', 'password_reset', etc.
  expiresAt      DateTime
  verified       Boolean   @default(false)
  attemptCount   Int       @default(0) // Number of verification attempts
  otpCooldown    DateTime? // When the user can request a new OTP
  otpLockedUntil DateTime? // If locked out, when they can try again
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  user           User?     @relation(fields: [userId], references: [id])
  userId        String?
}




